file                = { function }
                    ;

function            = functionDeclaration instructionBlock
                    ;

functionDeclaration = attributes 'function' ID '()' 
                    ;
    
instructionBlock    = '{' '\n' { line } line '}'
                    ;

(*****************************************************************************)
line                = instruction [ operand [ ',' operand ] ] '\n'
                    ;

(*****************************************************************************)
attributes          = '[' attribute '=' value { ',' attribute '=' value } ']' '\n'
                    ;

attribute           = 'registers'
                    | 'returns'
                    | 'parameters'
                    ;

value               = intValue
                    ;

(*****************************************************************************)
intValue            = nonzeroDigit { digit }
                    ;


nonzeroDigit        = '1' | '2' | '3' | '4' | '5' 
                    | '6' | '7' | '8' | '9' ;
digit               = nonzeroDigit
                    | '0'
                    ;

string              = 'a-zA-Z' { 'a-zA-Z' }
                    ;

(*****************************************************************************)
operand             = register
                    | intermediate
                    | labelName
                    | functionCall
                    ;

register            = 'R' intValue
                    ;

intermediate        = '$' intValue
                    ;

labelName           = '@' string
                    ;

functionCall        = string
                    ;


(*****************************************************************************)
instruction         = (*TODO: Copy*)
                    ;

                
